import org.openqa.selenium.By;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.Test;
import Pages.*;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeMethod;
import java.time.Duration;

public class MovieDetailsPageTest  {
    public WebDriver driver;
    MovieDetailsPage movieDetailsPage;
    SearchPageTest SearchPage;
    LoginPage loginpage;
    HomePage homepage;
    PopularPage popularPage;

    @BeforeMethod
    public void setup() {

        System.setProperty("webdriver.chrome.driver", "C:\\Users\\DELL\\Downloads\\chromedriver-win32 (1)\\chromedriver-win32\\chromedriver.exe");
        //  System.setProperty("webdriver.chrome.driver","C:\\Users\\HP\\AppData\\Local\\Temp\\9a45997c-a51a-48f3-b8d2-0eae3e52c291_chromedriver-win32 (3).zip.291\\chromedriver-win32\\chromedriver.exe");
        driver = new ChromeDriver();
        driver.get("https://qamoviesapp.ccbp.tech/login");
        driver.manage().window().minimize();
        SearchPage = new SearchPageTest();
        homepage = new HomePage(driver);
        loginpage = new LoginPage(driver);
        popularPage = new PopularPage(driver);
        movieDetailsPage = new MovieDetailsPage(driver);
        loginpage.loginToApplication("rahul", "rahul@2021");
        String expectedurl = "https://qamoviesapp.ccbp.tech/";
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
        wait.until(ExpectedConditions.urlToBe(expectedurl));
    }
    @AfterMethod
    public void tearDown() {
        // Close the browser window
        driver.quit();
    }
        @Test
        public void MovieDetailsPage () {
            movieDetailsPage.buttonDisplayed();
            //WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            String actual=movieDetailsPage.gettitle();
            Assert.assertEquals(actual,"No Time to Die","title does not match");
String actual1=movieDetailsPage.getoverview();
Assert.assertEquals(actual1,"Bond has left active service and is enjoying a tranquil life in Jamaica. His peace is short-lived when his old friend Felix Leiter from the CIA turns up asking for help. The mission to rescue a kidnapped scientist turns out to be far more treacherous than expected, leading Bond onto the trail of a mysterious villain armed with dangerous new technology.");
String actual2=movieDetailsPage.gettime();
Assert.assertEquals(actual2,"2h 43m","time");
            String actual3=movieDetailsPage.getsensor();
            Assert.assertEquals(actual3,"U/A","sensor");
            String actual4=movieDetailsPage.getyear();
            Assert.assertEquals(actual4,"2021","year");
            movieDetailsPage.clickSearchButton();
        }
        @Test(priority = 1)
    public void popularpage(){
        popularPage.clickButton();
        movieDetailsPage.clickButton1();
            String actual=movieDetailsPage.gettitle1();
            Assert.assertEquals(actual,"Venom","title does not match");
            String actual1=movieDetailsPage.getoverview1();
            Assert.assertEquals(actual1,"nvestigative journalist Eddie Brock attempts a comeback following a scandal, but accidentally becomes the host of Venom, a violent, super powerful alien symbiote.");
            String actual2=movieDetailsPage.gettime1();
            Assert.assertEquals(actual2,"2h 12m","time");
            String actual3=movieDetailsPage.getsensor1();
            Assert.assertEquals(actual3,"U/A","sensor");
            String actual4=movieDetailsPage.getyear1();
            Assert.assertEquals(actual4,"2021","year");
            movieDetailsPage.clickSearchButton1();
        }

    }